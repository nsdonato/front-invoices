name: 🤖 Workflow for PRs

on: [pull_request]

jobs:
  check-skip:
    name: ✋🏼 Cancel Previous Redundant Builds
    runs-on: ubuntu-latest
    steps:
      - name: ✋🏼 Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '[Example] Simple demo',
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'develop',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });
  add-reviews:
    needs: [create-pull-request]
    name: "🤓 Auto Assign"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: "🤓 Auto Assign"
        uses: danielswensson/auto-assign-owner-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  lint:
    needs: [add-reviews]
    runs-on: ubuntu-latest
    name: 💅🏼 Linting
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm ci
      - name: 💅🏼 Linting
        run: npm run lint
  build:
    needs: [lint]
    runs-on: ubuntu-latest
    name: 👷🏻‍♀️ Build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm ci
      - name: 👷🏻‍♀️ Build
        run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  testing:
    needs: [lint, build]
    runs-on: ubuntu-latest
    name: 🧐 Testing
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm ci
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: 🧐 Unit testing
        run: npm run test
  Deploy-Preview:
    needs: [testing]
    runs-on: ubuntu-latest
    name: 🚀 Vercel Preview Deployment
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
